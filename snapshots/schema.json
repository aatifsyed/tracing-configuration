{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Subscriber",
  "description": "Configuration for a totally dynamic subscriber.",
  "type": "object",
  "properties": {
    "filter": {
      "anyOf": [
        {
          "$ref": "#/$defs/Filter"
        },
        {
          "type": "null"
        }
      ]
    },
    "format": {
      "anyOf": [
        {
          "$ref": "#/$defs/Format"
        },
        {
          "type": "null"
        }
      ]
    },
    "writer": {
      "anyOf": [
        {
          "$ref": "#/$defs/Writer"
        },
        {
          "type": "null"
        }
      ]
    }
  },
  "$defs": {
    "BackpressureBehaviour": {
      "description": "How the [`tracing_appender::non_blocking::NonBlocking`] should behave on a full queue.\n\nSee [`tracing_appender::non_blocking::NonBlockingBuilder::lossy`].",
      "oneOf": [
        {
          "description": "String representation: `drop`",
          "type": "string",
          "const": "drop"
        },
        {
          "description": "String representation: `block`",
          "type": "string",
          "const": "block"
        }
      ]
    },
    "File": {
      "description": "Write to a [`File`](std::fs::File).",
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/$defs/FileOpenMode"
        },
        "non_blocking": {
          "description": "Wrap the writer in a [`tracing_appender::non_blocking::NonBlocking`].",
          "anyOf": [
            {
              "$ref": "#/$defs/NonBlocking"
            },
            {
              "type": "null"
            }
          ]
        },
        "path": {
          "type": "string"
        }
      },
      "required": [
        "path",
        "mode"
      ]
    },
    "FileOpenMode": {
      "description": "How to treat a newly created log file in [`Writer::File`].",
      "oneOf": [
        {
          "description": "String representation: `truncate`",
          "type": "string",
          "const": "truncate"
        },
        {
          "description": "String representation: `append`",
          "type": "string",
          "const": "append"
        }
      ]
    },
    "Filter": {
      "type": "object",
      "properties": {
        "directives": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regex": {
          "type": [
            "boolean",
            "null"
          ]
        }
      }
    },
    "FmtSpanItem": {
      "type": "string",
      "enum": [
        "new",
        "enter",
        "exit",
        "close",
        "none",
        "active",
        "full"
      ]
    },
    "Format": {
      "description": "Config for formatters.",
      "type": "object",
      "properties": {
        "ansi": {
          "description": "See [`tracing_subscriber::fmt::SubscriberBuilder::with_ansi`].",
          "type": [
            "boolean",
            "null"
          ]
        },
        "file": {
          "description": "See [`tracing_subscriber::fmt::SubscriberBuilder::with_file`].",
          "type": [
            "boolean",
            "null"
          ]
        },
        "formatter": {
          "description": "Specific output formats.",
          "anyOf": [
            {
              "$ref": "#/$defs/Formatter"
            },
            {
              "type": "null"
            }
          ]
        },
        "level": {
          "description": "See [`tracing_subscriber::fmt::SubscriberBuilder::with_level`].",
          "type": [
            "boolean",
            "null"
          ]
        },
        "line_number": {
          "description": "See [`tracing_subscriber::fmt::SubscriberBuilder::with_line_number`].",
          "type": [
            "boolean",
            "null"
          ]
        },
        "span_events": {
          "description": "What span events to emit.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/$defs/FmtSpanItem"
          }
        },
        "target": {
          "description": "See [`tracing_subscriber::fmt::SubscriberBuilder::with_target`].",
          "type": [
            "boolean",
            "null"
          ]
        },
        "thread_ids": {
          "description": "See [`tracing_subscriber::fmt::SubscriberBuilder::with_thread_ids`].",
          "type": [
            "boolean",
            "null"
          ]
        },
        "thread_names": {
          "description": "See [`tracing_subscriber::fmt::SubscriberBuilder::with_thread_names`].",
          "type": [
            "boolean",
            "null"
          ]
        },
        "timer": {
          "description": "What timing information to include.",
          "anyOf": [
            {
              "$ref": "#/$defs/Timer"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "Formatter": {
      "description": "The specific output format.",
      "oneOf": [
        {
          "description": "See [`tracing_subscriber::fmt::format::Full`].",
          "type": "string",
          "const": "full"
        },
        {
          "description": "See [`tracing_subscriber::fmt::format::Compact`].",
          "type": "string",
          "const": "compact"
        },
        {
          "description": "See [`tracing_subscriber::fmt::format::Pretty`].",
          "type": "string",
          "const": "pretty"
        },
        {
          "description": "See [`tracing_subscriber::fmt::format::Json`].",
          "type": "object",
          "properties": {
            "json": {
              "anyOf": [
                {
                  "$ref": "#/$defs/Json"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "json"
          ]
        }
      ]
    },
    "Json": {
      "type": "object",
      "properties": {
        "current_span": {
          "description": "See [`tracing_subscriber::fmt::format::Json::with_current_span`].",
          "type": [
            "boolean",
            "null"
          ]
        },
        "flatten_event": {
          "description": "See [`tracing_subscriber::fmt::format::Json::flatten_event`].",
          "type": [
            "boolean",
            "null"
          ]
        },
        "span_list": {
          "description": "See [`tracing_subscriber::fmt::format::Json::with_span_list`].",
          "type": [
            "boolean",
            "null"
          ]
        }
      }
    },
    "NonBlocking": {
      "description": "Configuration for [`tracing_appender::non_blocking::NonBlocking`].",
      "type": "object",
      "properties": {
        "behaviour": {
          "anyOf": [
            {
              "$ref": "#/$defs/BackpressureBehaviour"
            },
            {
              "type": "null"
            }
          ]
        },
        "buffer_length": {
          "description": "See [`tracing_appender::non_blocking::NonBlockingBuilder::buffered_lines_limit`].",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint",
          "minimum": 0
        }
      }
    },
    "Roll": {
      "description": "Config for [`tracing_appender::rolling::RollingFileAppender`].",
      "type": "object",
      "properties": {
        "limit": {
          "description": "See [`tracing_appender::rolling::Builder::max_log_files`].",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint",
          "minimum": 0
        },
        "prefix": {
          "description": "See [`tracing_appender::rolling::Builder::filename_prefix`].",
          "type": [
            "string",
            "null"
          ]
        },
        "rotation": {
          "description": "See [`tracing_appender::rolling::Builder::rotation`].",
          "anyOf": [
            {
              "$ref": "#/$defs/Rotation"
            },
            {
              "type": "null"
            }
          ]
        },
        "suffix": {
          "description": "See [`tracing_appender::rolling::Builder::filename_suffix`].",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "Rolling": {
      "description": "Use a [`tracing_appender::rolling::RollingFileAppender`].",
      "type": "object",
      "properties": {
        "directory": {
          "type": "string"
        },
        "non_blocking": {
          "description": "Wrap the writer in a [`tracing_appender::non_blocking::NonBlocking`].",
          "anyOf": [
            {
              "$ref": "#/$defs/NonBlocking"
            },
            {
              "type": "null"
            }
          ]
        },
        "roll": {
          "anyOf": [
            {
              "$ref": "#/$defs/Roll"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "directory"
      ]
    },
    "Rotation": {
      "description": "How often to rotate the [`tracing_appender::rolling::RollingFileAppender`].\n\nSee [`tracing_appender::rolling::Rotation`].",
      "oneOf": [
        {
          "description": "String representation: `minutely`",
          "type": "string",
          "const": "minutely"
        },
        {
          "description": "String representation: `hourly`",
          "type": "string",
          "const": "hourly"
        },
        {
          "description": "String representation: `daily`",
          "type": "string",
          "const": "daily"
        },
        {
          "description": "String representation: `never`",
          "type": "string",
          "const": "never"
        }
      ]
    },
    "Timer": {
      "description": "Which timer implementation to use.",
      "oneOf": [
        {
          "description": "See [`tracing_subscriber::fmt::SubscriberBuilder::without_time`].",
          "type": "string",
          "const": "none"
        },
        {
          "description": "See [`tracing_subscriber::fmt::time::ChronoLocal`].",
          "type": "object",
          "properties": {
            "local": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "local"
          ]
        },
        {
          "description": "See [`tracing_subscriber::fmt::time::ChronoUtc`].",
          "type": "object",
          "properties": {
            "utc": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "utc"
          ]
        },
        {
          "description": "See [`tracing_subscriber::fmt::time::SystemTime`].",
          "type": "string",
          "const": "system"
        },
        {
          "description": "See [`tracing_subscriber::fmt::time::Uptime`].",
          "type": "string",
          "const": "uptime"
        }
      ]
    },
    "Writer": {
      "description": "Which writer to use.",
      "oneOf": [
        {
          "description": "No writer.",
          "type": "string",
          "const": "null"
        },
        {
          "description": "Use [`io::stdout`](std::io::stdout).",
          "type": "string",
          "const": "stdout"
        },
        {
          "description": "Use [`io::stderr`](std::io::stderr).",
          "type": "string",
          "const": "stderr"
        },
        {
          "type": "object",
          "properties": {
            "file": {
              "$ref": "#/$defs/File"
            }
          },
          "additionalProperties": false,
          "required": [
            "file"
          ]
        },
        {
          "type": "object",
          "properties": {
            "rolling": {
              "$ref": "#/$defs/Rolling"
            }
          },
          "additionalProperties": false,
          "required": [
            "rolling"
          ]
        }
      ]
    }
  }
}